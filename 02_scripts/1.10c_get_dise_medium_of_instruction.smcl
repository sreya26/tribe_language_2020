{smcl}
{txt}{sf}{ul off}{.-}
      name:  {res}plog_801
       {txt}log:  {res}/Users/sreyamajumder/Dropbox/sreya_majumder/tribelanguage_2020 sreya/02_scripts/1.10c_get_dise_medium_of_instruction.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 Sep 2021, 20:43:08
{txt}
{com}. 
. project , uses("../08_temp/dise_basic_general.dta")
{txt}project version2_tribe_language > do-file uses: {res}"08_temp/dise_basic_general.dta" filesig(4060135713:433151470){txt}

{com}. project , uses("../08_temp/dise_states_districts.dta")
{txt}project version2_tribe_language > do-file uses: {res}"08_temp/dise_states_districts.dta" filesig(145017176:44696){txt}

{com}. project , uses("../08_temp/regions6113_with_dists_dise.dta")
{txt}project version2_tribe_language > do-file uses: {res}"08_temp/regions6113_with_dists_dise.dta" filesig(1096585368:142093){txt}

{com}. project , uses("../08_temp/school_enrollment.dta")
{txt}project version2_tribe_language > do-file uses: {res}"08_temp/school_enrollment.dta" filesig(3788477583:104303147){txt}

{com}. 
. project , original("1.A_create_1961_statevar.do")
{txt}project version2_tribe_language > do-file uses original: {res}"02_scripts/1.A_create_1961_statevar.do" filesig(2782419759:1871){txt}

{com}. 
. run "1.A_create_1961_statevar.do"
{txt}
{com}. 
. *********************************************************************************************************************
. * 1. create the file dise_basic_general_with_regions, by
. *       -- giving codes from consistent 1961-2013 regions and consistent 2011-2013 regions
. *       -- keeping only states with ST populations
. *   -- keeping only data from schools with primary grades
. *********************************************************************************************************************
. 
.         use "../08_temp/dise_basic_general", clear
{txt}
{com}. 
.         gen stcode_dise = real(substr(school_code,1,2))
{txt}
{com}.         gen distcode_dise = real(substr(school_code,3,2))
{txt}
{com}.         gen dcode_dise = real(substr(school_code,1,4))
{txt}
{com}.         rename distname district_dise
{res}{txt}
{com}.         drop state
{txt}
{com}. 
.         merge m:1 dcode_dise using "../08_temp/dise_states_districts", assert(match using) keepusing(state_dise)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}              35
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}              35{txt}  (_merge==2)

{col 5}Matched{col 30}{res}       1,448,531{txt}  (_merge==3)
{col 5}{hline 41}

{com}.         assert _merge == 2 if mod(dcode_dise,100) == 0 // state-level observations
{txt}
{com}.         drop _merge
{txt}
{com}.         
.         order state_dise, after(stcode_dise)
{txt}
{com}.         
.         *********************************************************************************************************************
.         * 1.1 give DISE 2013-14 data codes from consistent 1961-2013 regions
.         *********************************************************************************************************************
. 
.         merge m:1 dcode_dise using "../08_temp/regions6113_with_dists_dise", ///
>                         assert(match) nogen keepusing(region6113 regionname6113)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}       1,448,566{txt}  
{col 5}{hline 41}

{com}.         
.         drop if mod(dcode_dise,100) == 0
{txt}(35 observations deleted)

{com}.                         
.                         
.         *********************************************************************************************************************
.         * 1.2 drop states that do not have STs delimited in 2011, and keep only elementary schools
.         *********************************************************************************************************************
. 
.         drop if inlist(state_dise,"Chandigarh","Haryana","NCT of Delhi","Puducherry","Punjab")
{txt}(57,422 observations deleted)

{com}. 
.         keep if inlist(schcat,1,2,3,6) // keep only elementary schools, i.e. those with primary grades (and possibly other grades too)
{txt}(234,851 observations deleted)

{com}. 
.         note: This dataset contains information only on elementary schools, and only in areas that had STs delimited in 2011.
{res}{txt}
{com}. 
.         compress
  {txt}variable {bf}{res}stcode_dise{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}distcode_dise{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}byte{sf}
  {txt}variable {bf}{res}dcode_dise{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}int{sf}
  {txt}variable {bf}{res}region6113{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}int{sf}
{txt}  (11,562,580 bytes saved)

{com}.         
.         *********************************************************************************************************************
.         * 1.3 create a state variable for 1961
.         * we can do this since our regions for the areas in which STs were delimited, do not cross census 1961 state lines
.         * this would not be true for the Punjab & Himachal Pradesh region in general
.         * remember that we have also ignored the UP-Bihar transfers in the 1960s
.         *********************************************************************************************************************
.         
.         qui create_1961_statevar stcode_dise , gen(state_1961)
{txt}
{com}.         
.         * the only areas that remain of Punjab are the ones that eventually went over to Himachal. Hence the following line.
.         replace state_1961 = "Himachal Pradesh" if state_1961 == "Punjab"
{txt}(0 real changes made)

{com}.         
.         order state_1961 , after(state_dise)
{txt}
{com}.         
.         save "../03_processed/dise_basic_general_with_regions", replace
{txt}{p 0 4 2}
file {bf}
../03_processed/dise_basic_general_with_regions.dta{rm}
saved
{p_end}

{com}. 
. 
. ****************************************************************************************************************************
. * 2. Create a dataset with the modal medium of instruction in each district/region (as well as at the state level)
. ****************************************************************************************************************************
. 
.         ****************************************************************************************************************************
.         * 2.1 State-level dataset
.         ****************************************************************************************************************************
. 
.         use "../03_processed/dise_basic_general_with_regions", clear
{txt}
{com}.         egen modal_language = mode(medinstr1) , by(state_1961)
{txt}
{com}.         assert ~missing(modal_language) // check to ensure there is always a [unique] mode (missing would occur if there are multiple modes)
{txt}
{com}.         label values modal_language MEDINSTR1
{txt}
{com}.         decode modal_language, gen(modal_language_string)
{txt}
{com}.         egen num_schools = count(medinstr1), by(state_1961)
{txt}
{com}. 
.         duplicates drop state_1961, force

{p 0 4}{txt}Duplicates in terms of {res} state_1961{p_end}

{txt}(1,156,234 observations deleted)

{com}. 
.         keep state_1961 modal_language modal_language_string num_schools
{txt}
{com}.         compress
{txt}  (0 bytes saved)

{com}.         save "../08_temp/dise_modal_languages_state", replace
{txt}{p 0 4 2}
file {bf}
../08_temp/dise_modal_languages_state.dta{rm}
saved
{p_end}

{com}. 
.         ****************************************************************************************************************************
.         * 2.2 Region-level dataset
.         ****************************************************************************************************************************
. 
.         use "../03_processed/dise_basic_general_with_regions", clear
{txt}
{com}. 
.         egen modal_language = mode(medinstr1) , by(region6113) maxmode
{txt}
{com}.         label values modal_language MEDINSTR1
{txt}
{com}.         decode modal_language, gen(modal_language_string)
{txt}
{com}. 
.         egen num_schools = count(medinstr1), by(region6113)
{txt}
{com}. 
.         duplicates drop region6113, force

{p 0 4}{txt}Duplicates in terms of {res} region6113{p_end}

{txt}(1,155,983 observations deleted)

{com}.         keep state_1961 state_dise region6113 regionname6113 modal_language modal_language_string num_schools
{txt}
{com}.         order state_1961 state_dise region6113 regionname6113 modal_language modal_language_string num_schools
{txt}
{com}.         compress
  {txt}variable {bf}{res}num_schools{sf}{txt} was {bf}{res}float{sf}{txt} now {bf}{res}int{sf}
{txt}  (550 bytes saved)

{com}.         save "../08_temp/dise_modal_languages", replace
{txt}{p 0 4 2}
file {bf}
../08_temp/dise_modal_languages.dta{rm}
saved
{p_end}

{com}. 
. 
.         
. ***********************************************************************************************************************************************************
. * 3. Create a dataset with the full distribution of media of instruction in each region (as well as at the state level) 
. ***********************************************************************************************************************************************************
. 
. 
.         ************************************************************************************************************
.         * 3.1 Method 1: Using overall number of schools for each medium of instruction [nothing specific to STs]
.         ************************************************************************************************************
. 
.         use "../03_processed/dise_basic_general_with_regions", clear
{txt}
{com}. 
.         egen num_schools = count(pincode), by(region6113) // could've picked any numeric variable to count
{txt}
{com}.         egen num_schools_lang = count(pincode), by(region6113 medinstr1)
{txt}
{com}. 
.         duplicates drop region6113 medinstr1, force

{p 0 4}{txt}Duplicates in terms of {res} region6113 medinstr1{p_end}

{txt}(1,154,881 observations deleted)

{com}. 
.         keep state_1961 region6113 regionname6113 num_schools medinstr1 num_schools_lang
{txt}
{com}.         sort state_1961 region6113 regionname6113 num_schools medinstr1 num_schools_lang
{txt}
{com}.         order state_1961 region6113 regionname6113 num_schools medinstr1 num_schools_lang
{txt}
{com}. 
.         noi count if missing(medinstr1) // should be just two observations, with num_schools_lang = 1 each [so two schools in all]
  {res}1
{txt}
{com}.         drop if missing(medinstr1)
{txt}(1 observation deleted)

{com}.         reshape wide num_schools_lang, i(state_1961 region6113 regionname6113 num_schools) j(medinstr1)
{txt}(j = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 30 32 33 34 39 98 99)

Data{col 36}Long{col 43}->{col 48}Wide
{hline 77}
Number of observations     {res}       1,376   {txt}->   {res}275         
{txt}Number of variables        {res}           6   {txt}->   {res}36          
{txt}j variable (32 values)        {res}medinstr1   {txt}->   (dropped)
xij variables:
                       {res}num_schools_lang   {txt}->   {res}num_schools_lang1 num_schools_lang2 ... num_schools_lang99
{txt}{hline 77}

{com}.          
.         * create state-levels obs
.         preserve
{txt}
{com}.                 collapse (sum) num_schools num_schools_lang*, by(state_1961)
{res}{txt}
{com}.                 gen is_state = 1
{txt}
{com}.                 tempfile state_level
{txt}
{com}.                 save `state_level'
{txt}{p 0 4 2}
file {bf}
/var/folders/m0/4lyk4gcd0rs88ghc7sdnwc600000gn/T//S_13929.000007{rm}
saved
as .dta format
{p_end}

{com}.         restore
{txt}
{com}. 
.         gen is_state = 0
{txt}
{com}.         append using `state_level'
{txt}{p 0 7 2}
(variable
{bf:num_schools} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang1} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang2} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang3} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang4} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang5} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang6} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang7} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang8} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang9} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang10} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang11} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang12} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang13} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang14} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang15} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang16} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang17} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang18} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang19} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang20} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang22} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang23} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang24} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang25} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang26} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang30} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang32} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang33} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang34} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang39} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang98} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:num_schools_lang99} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}

{com}. 
.         gsort state_1961 -is_state region6113 regionname6113 num_schools 
{txt}
{com}. 
.         local dise_lang_code         1       2        3      4      5        6       7        8        9        10     11     12         13             14      15     16    17    18    19     20    21     22    23   24   25     26       27     28     29   30  31  32  33  34  39  98    99                          
{txt}
{com}.         local dise_lang_string " Assamese Bengali Gujarati Hindi Kannada Kashmiri Konkani Malayalam Manipuri Marathi Nepali Oriya      Punjabi       Sanskrit Sindhi Tamil Telugu Urdu English Bodo Mising Dogri Khasi Garo Mizo  Bhutia   Lepcha Limboo French NA  NA  NA  NA  NA  NA  NA  Others "
{txt}
{com}.         local ethnologue_lang  " Assamese Bengali Gujarati Hindi Kannada Kashmiri Konkani Malayalam  Meitei  Marathi Nepali Odia "Punjabi, Eastern" Sanskrit Sindhi Tamil Telugu Urdu English Boro Mising Dogri Khasi Garo Mizo Sikkimese Lepcha Limbu    NA   NA  NA  NA  NA  NA  NA  NA    NA " 
{txt}
{com}.         * note: above, we code French as NA rather than putting it in ethnologue_tree because it occurs only in a few schools in Pondicherry, which will in any case drop out of our dataset
.         * note: codes 30-98 are not documented in the DISE codebooks. Follow this up if possible.
. 
.         foreach var of varlist num_schools_lang* {c -(}
{txt}  2{com}.                 if regexm("`var'","[0-9]+$") local num = regexs(0) // the digits at the end of the var
{txt}  3{com}.                 gen frac_schools_lang`num' = num_schools_lang`num' / num_schools
{txt}  4{com}.                 local pos: list posof "`num'" in dise_lang_code
{txt}  5{com}.                 local lang: word `pos' of `ethnologue_lang'"
{txt}  6{com}.                 label var frac_schools_lang`num' "`lang'"
{txt}  7{com}.                 {c )-}
{txt}(254 missing values generated)
(234 missing values generated)
(234 missing values generated)
(54 missing values generated)
(221 missing values generated)
(272 missing values generated)
(272 missing values generated)
(263 missing values generated)
(267 missing values generated)
(223 missing values generated)
(264 missing values generated)
(253 missing values generated)
(273 missing values generated)
(222 missing values generated)
(268 missing values generated)
(243 missing values generated)
(231 missing values generated)
(59 missing values generated)
(3 missing values generated)
(254 missing values generated)
(274 missing values generated)
(274 missing values generated)
(271 missing values generated)
(273 missing values generated)
(274 missing values generated)
(254 missing values generated)
(272 missing values generated)
(274 missing values generated)
(274 missing values generated)
(273 missing values generated)
(175 missing values generated)
(172 missing values generated)

{com}. 
.         keep state_1961 region6113 regionname6113 frac_schools_lang* is_state
{txt}
{com}.         recode frac_schools_lang* (. = 0)
{txt}(254 changes made to {bf:frac_schools_lang1})
(234 changes made to {bf:frac_schools_lang2})
(234 changes made to {bf:frac_schools_lang3})
(54 changes made to {bf:frac_schools_lang4})
(221 changes made to {bf:frac_schools_lang5})
(272 changes made to {bf:frac_schools_lang6})
(272 changes made to {bf:frac_schools_lang7})
(263 changes made to {bf:frac_schools_lang8})
(267 changes made to {bf:frac_schools_lang9})
(223 changes made to {bf:frac_schools_lang10})
(264 changes made to {bf:frac_schools_lang11})
(253 changes made to {bf:frac_schools_lang12})
(273 changes made to {bf:frac_schools_lang13})
(222 changes made to {bf:frac_schools_lang14})
(268 changes made to {bf:frac_schools_lang15})
(243 changes made to {bf:frac_schools_lang16})
(231 changes made to {bf:frac_schools_lang17})
(59 changes made to {bf:frac_schools_lang18})
(3 changes made to {bf:frac_schools_lang19})
(254 changes made to {bf:frac_schools_lang20})
(274 changes made to {bf:frac_schools_lang22})
(274 changes made to {bf:frac_schools_lang23})
(271 changes made to {bf:frac_schools_lang24})
(273 changes made to {bf:frac_schools_lang25})
(274 changes made to {bf:frac_schools_lang26})
(254 changes made to {bf:frac_schools_lang30})
(272 changes made to {bf:frac_schools_lang32})
(274 changes made to {bf:frac_schools_lang33})
(274 changes made to {bf:frac_schools_lang34})
(273 changes made to {bf:frac_schools_lang39})
(175 changes made to {bf:frac_schools_lang98})
(172 changes made to {bf:frac_schools_lang99})

{com}. 
.         tempfile lang_distrib_by_schools
{txt}
{com}.         save `lang_distrib_by_schools'
{txt}{p 0 4 2}
file {bf}
/var/folders/m0/4lyk4gcd0rs88ghc7sdnwc600000gn/T//S_13929.000008{rm}
saved
as .dta format
{p_end}

{com}. 
. 
.         *********************************************************************************************************
.         * 3.2 Method 2: Using enrolments for each medium of instruction, both for overall population and for STs
.         *********************************************************************************************************
. 
.         use "../03_processed/dise_basic_general_with_regions", clear
{txt}
{com}.         keep region6113 regionname6113 state_1961 state_dise dcode_dise district_dise school_code medinstr1
{txt}
{com}.         rename school_code schcd
{res}{txt}
{com}. 
.         merge 1:1 schcd using "../08_temp/school_enrollment"
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}         292,318
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}         292,318{txt}  (_merge==2)

{col 5}Matched{col 30}{res}       1,156,258{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
.         drop if _merge == 2 
{txt}(292,318 observations deleted)

{com}.         drop _merge
{txt}
{com}.         drop enroll_primary* enroll_secondary* filename
{txt}
{com}. 
.         egen double tot_enroll_region = total(enroll_tot), by(region6113)
{txt}
{com}.         egen double tot_enroll_lang = total(enroll_tot), by(region6113 medinstr1)
{txt}
{com}. 
.         egen double tot_st_enroll_region = total(enroll_tot_st), by(region6113)
{txt}
{com}.         egen double tot_st_enroll_lang = total(enroll_tot_st), by(region6113 medinstr1)
{txt}
{com}. 
.         duplicates drop region6113 medinstr1, force

{p 0 4}{txt}Duplicates in terms of {res} region6113 medinstr1{p_end}

{txt}(1,154,881 observations deleted)

{com}. 
.         keep state_1961 region6113 regionname6113 *_enroll_region medinstr1 *_enroll_lang
{txt}
{com}.         sort state_1961 region6113 regionname6113 *_enroll_region medinstr1 *_enroll_lang
{txt}
{com}.         order state_1961 region6113 regionname6113 *_enroll_region medinstr1 *_enroll_lang
{txt}
{com}. 
.         noi count if missing(medinstr1) // 2 obs
  {res}1
{txt}
{com}.         drop if missing(medinstr1)
{txt}(1 observation deleted)

{com}.         reshape wide tot_enroll_lang tot_st_enroll_lang, i(state_1961 region6113 regionname6113 tot_enroll_region tot_st_enroll_region) j(medinstr1)
{txt}(j = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 30 32 33 34 39 98 99)

Data{col 36}Long{col 43}->{col 48}Wide
{hline 77}
Number of observations     {res}       1,376   {txt}->   {res}275         
{txt}Number of variables        {res}           8   {txt}->   {res}69          
{txt}j variable (32 values)        {res}medinstr1   {txt}->   (dropped)
xij variables:
                        {res}tot_enroll_lang   {txt}->   {res}tot_enroll_lang1 tot_enroll_lang2 ... tot_enroll_lang99
                     tot_st_enroll_lang   {txt}->   {res}tot_st_enroll_lang1 tot_st_enroll_lang2 ... tot_st_enroll_lang99
{txt}{hline 77}

{com}.          
.         * create state-levels obs
.         preserve
{txt}
{com}.                 collapse (sum) tot_enroll_region tot_enroll_lang* tot_st_enroll_region tot_st_enroll_lang*, by(state_1961)
{res}{txt}
{com}.                 gen is_state = 1
{txt}
{com}.                 tempfile state_level
{txt}
{com}.                 save `state_level'
{txt}{p 0 4 2}
file {bf}
/var/folders/m0/4lyk4gcd0rs88ghc7sdnwc600000gn/T//S_13929.00000a{rm}
saved
as .dta format
{p_end}

{com}.         restore
{txt}
{com}. 
.         gen is_state = 0
{txt}
{com}.         append using `state_level'
{txt}
{com}. 
.         gsort state_1961 -is_state region6113 regionname6113 tot_enroll_region tot_st_enroll_region
{txt}
{com}.         
.         #delimit ;
{txt}delimiter now ;
{com}.         local dise_lang_code         1       2        3      4      5        6       7        8        9        10     
>                                                                 11     12         13             14      15     16    17    18    19     20    21     
>                                                                 22    23   24   25     26       27     28     29   30  31  32  33  34  39  98    99        ;
{txt}
{com}.                         local dise_lang_string " Assamese Bengali Gujarati Hindi Kannada Kashmiri Konkani Malayalam Manipuri Marathi 
>                                                         Nepali Oriya      Punjabi       Sanskrit Sindhi Tamil Telugu Urdu English Bodo Mising 
>                                                         Dogri Khasi Garo Mizo  Bhutia   Lepcha Limboo French NA  NA  NA  NA  NA  NA  NA  Others " ;
{txt}
{com}.         local ethnologue_lang  " Assamese Bengali Gujarati Hindi Kannada Kashmiri Konkani Malayalam  Meitei  Marathi 
>                                                         Nepali Odia "Punjabi, Eastern" Sanskrit Sindhi Tamil Telugu Urdu English Boro Mising 
>                                                         Dogri Khasi Garo Mizo Sikkimese Lepcha Limbu    NA   NA  NA  NA  NA  NA  NA  NA    NA " ;
{txt}
{com}.         #delimit cr
{txt}delimiter now cr
{com}.         * note: above, we code French as NA rather than putting it in ethnologue_tree because it occurs only in a few schools in Pondicherry, which will in any case drop out of our dataset
.         * note: codes 30-98 are not documented in the DISE codebooks. Follow this up if possible.
. 
.         foreach var of varlist tot_enroll_lang* {c -(}
{txt}  2{com}.                 if regexm("`var'","[0-9]+$") local num = regexs(0) // the digits at the end of the var
{txt}  3{com}.                 gen frac_enroll_lang`num' = tot_enroll_lang`num' / tot_enroll_region
{txt}  4{com}.                 gen frac_st_enroll_lang`num' = tot_st_enroll_lang`num'/ tot_st_enroll_region
{txt}  5{com}.                 local pos: list posof "`num'" in dise_lang_code
{txt}  6{com}.                 local lang: word `pos' of `ethnologue_lang'"
{txt}  7{com}.                 label var frac_enroll_lang`num' "`lang'"
{txt}  8{com}.                 label var frac_st_enroll_lang`num' "`lang'"
{txt}  9{com}.                 {c )-}
{txt}(254 missing values generated)
(254 missing values generated)
(234 missing values generated)
(234 missing values generated)
(234 missing values generated)
(234 missing values generated)
(54 missing values generated)
(55 missing values generated)
(221 missing values generated)
(221 missing values generated)
(272 missing values generated)
(272 missing values generated)
(272 missing values generated)
(272 missing values generated)
(263 missing values generated)
(263 missing values generated)
(267 missing values generated)
(267 missing values generated)
(223 missing values generated)
(223 missing values generated)
(264 missing values generated)
(264 missing values generated)
(253 missing values generated)
(253 missing values generated)
(273 missing values generated)
(273 missing values generated)
(222 missing values generated)
(222 missing values generated)
(268 missing values generated)
(268 missing values generated)
(243 missing values generated)
(243 missing values generated)
(231 missing values generated)
(231 missing values generated)
(59 missing values generated)
(60 missing values generated)
(3 missing values generated)
(4 missing values generated)
(254 missing values generated)
(254 missing values generated)
(274 missing values generated)
(274 missing values generated)
(274 missing values generated)
(274 missing values generated)
(271 missing values generated)
(271 missing values generated)
(273 missing values generated)
(273 missing values generated)
(274 missing values generated)
(274 missing values generated)
(254 missing values generated)
(254 missing values generated)
(272 missing values generated)
(272 missing values generated)
(274 missing values generated)
(274 missing values generated)
(274 missing values generated)
(274 missing values generated)
(273 missing values generated)
(273 missing values generated)
(175 missing values generated)
(175 missing values generated)
(172 missing values generated)
(172 missing values generated)

{com}. 
.         keep state_1961 region6113 regionname6113 frac_enroll_lang* frac_st_enroll_lang* is_state
{txt}
{com}.         recode frac_enroll_lang* (. = 0)
{txt}(254 changes made to {bf:frac_enroll_lang1})
(234 changes made to {bf:frac_enroll_lang2})
(234 changes made to {bf:frac_enroll_lang3})
(54 changes made to {bf:frac_enroll_lang4})
(221 changes made to {bf:frac_enroll_lang5})
(272 changes made to {bf:frac_enroll_lang6})
(272 changes made to {bf:frac_enroll_lang7})
(263 changes made to {bf:frac_enroll_lang8})
(267 changes made to {bf:frac_enroll_lang9})
(223 changes made to {bf:frac_enroll_lang10})
(264 changes made to {bf:frac_enroll_lang11})
(253 changes made to {bf:frac_enroll_lang12})
(273 changes made to {bf:frac_enroll_lang13})
(222 changes made to {bf:frac_enroll_lang14})
(268 changes made to {bf:frac_enroll_lang15})
(243 changes made to {bf:frac_enroll_lang16})
(231 changes made to {bf:frac_enroll_lang17})
(59 changes made to {bf:frac_enroll_lang18})
(3 changes made to {bf:frac_enroll_lang19})
(254 changes made to {bf:frac_enroll_lang20})
(274 changes made to {bf:frac_enroll_lang22})
(274 changes made to {bf:frac_enroll_lang23})
(271 changes made to {bf:frac_enroll_lang24})
(273 changes made to {bf:frac_enroll_lang25})
(274 changes made to {bf:frac_enroll_lang26})
(254 changes made to {bf:frac_enroll_lang30})
(272 changes made to {bf:frac_enroll_lang32})
(274 changes made to {bf:frac_enroll_lang33})
(274 changes made to {bf:frac_enroll_lang34})
(273 changes made to {bf:frac_enroll_lang39})
(175 changes made to {bf:frac_enroll_lang98})
(172 changes made to {bf:frac_enroll_lang99})

{com}.         recode frac_st_enroll_lang* (. = 0)
{txt}(254 changes made to {bf:frac_st_enroll_lang1})
(234 changes made to {bf:frac_st_enroll_lang2})
(234 changes made to {bf:frac_st_enroll_lang3})
(55 changes made to {bf:frac_st_enroll_lang4})
(221 changes made to {bf:frac_st_enroll_lang5})
(272 changes made to {bf:frac_st_enroll_lang6})
(272 changes made to {bf:frac_st_enroll_lang7})
(263 changes made to {bf:frac_st_enroll_lang8})
(267 changes made to {bf:frac_st_enroll_lang9})
(223 changes made to {bf:frac_st_enroll_lang10})
(264 changes made to {bf:frac_st_enroll_lang11})
(253 changes made to {bf:frac_st_enroll_lang12})
(273 changes made to {bf:frac_st_enroll_lang13})
(222 changes made to {bf:frac_st_enroll_lang14})
(268 changes made to {bf:frac_st_enroll_lang15})
(243 changes made to {bf:frac_st_enroll_lang16})
(231 changes made to {bf:frac_st_enroll_lang17})
(60 changes made to {bf:frac_st_enroll_lang18})
(4 changes made to {bf:frac_st_enroll_lang19})
(254 changes made to {bf:frac_st_enroll_lang20})
(274 changes made to {bf:frac_st_enroll_lang22})
(274 changes made to {bf:frac_st_enroll_lang23})
(271 changes made to {bf:frac_st_enroll_lang24})
(273 changes made to {bf:frac_st_enroll_lang25})
(274 changes made to {bf:frac_st_enroll_lang26})
(254 changes made to {bf:frac_st_enroll_lang30})
(272 changes made to {bf:frac_st_enroll_lang32})
(274 changes made to {bf:frac_st_enroll_lang33})
(274 changes made to {bf:frac_st_enroll_lang34})
(273 changes made to {bf:frac_st_enroll_lang39})
(175 changes made to {bf:frac_st_enroll_lang98})
(172 changes made to {bf:frac_st_enroll_lang99})

{com}. 
.         merge 1:1 state_1961 region6113 using `lang_distrib_by_schools', assert(match) nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             299{txt}  
{col 5}{hline 41}

{com}.         * note that we need state_1961 in the merge above, because for state-level obs, region6113 is missing in both datasets, and thus is not unique by itself
.         save "../08_temp/dise_lang_distribution", replace
{txt}{p 0 4 2}
file {bf}
../08_temp/dise_lang_distribution.dta{rm}
saved
{p_end}

{com}.         
. 
. project , creates("../03_processed/dise_basic_general_with_regions.dta")
{txt}project version2_tribe_language > do-file creates: {res}"03_processed/dise_basic_general_with_regions.dta" filesig(4208678473:526147983){txt}

{com}. project , creates("../08_temp/dise_modal_languages_state.dta")
{txt}project version2_tribe_language > do-file creates: {res}"08_temp/dise_modal_languages_state.dta" filesig(281705244:9247){txt}

{com}. project , creates("../08_temp/dise_modal_languages.dta")
{txt}project version2_tribe_language > do-file creates: {res}"08_temp/dise_modal_languages.dta" filesig(2238361244:55545){txt}

{com}. project , creates("../08_temp/dise_lang_distribution.dta")
{txt}project version2_tribe_language > do-file creates: {res}"08_temp/dise_lang_distribution.dta" filesig(2207428754:226240){txt}

{com}. 
{txt}end of do-file
      name:  {res}plog_801
       {txt}log:  {res}/Users/sreyamajumder/Dropbox/sreya_majumder/tribelanguage_2020 sreya/02_scripts/1.10c_get_dise_medium_of_instruction.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 6 Sep 2021, 20:44:00
{txt}{.-}
{smcl}
{txt}{sf}{ul off}